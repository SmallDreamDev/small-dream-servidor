Listo: 
    - Lenguaje(s): Javascript/Node (Cliente - Servidor)
    - Tecnologías/frameworks:
        - Analisis estático del código: Codacy
        - Integración contínua: Travis
        - Code coverage: Codecov
        - Frameworks interfaz cliente: React
        - Posible despliegue: AWS, Kubernetes, Docker, GitHub Pages, Herokku
    - Persistencia:
        - NoSQL - MongoDB M0 - 512MB. Factible con posibilidad de aumentar a M2 - 2 GB
    - Testing:
        - Unitarias: Jest con Javascript
        - Rendimiento (?): Gatling
        - Aceptación (?): Puppeteer, Cucumber
    - Arquitectura (Api(s), docs(?)):
        - Diseño para modelo de dominio:
            - BDatos
            - CRUD entidades
            - Clases modelo
    - Otros:
        - Categorías de actividad (nueva tabla para relacionar actividad con categoría)
        - Gestión de información de actividades pero podemos llegar a tener campos dinámicos
        - Fichas para cualquier componente: Usuarios/as, actividades, profesores/monitores
        - Filtrado de datos para crear queries (potencialmente infinitas combinaciones)

Arquitectura (Api(s), docs(?))
    Quality attributes, refinar y priorizar

Contabilidad, lógica (Nuevo apartado, precios, generar ticket/invoice (pdf(?)))
Crear módulo para poder notificar a los padres con el cumpleaños de los crios
    Crear plantilla email genérica para enviar código con diversos beneficios al canjearse dentro de la aplicación
    Correo genérico, código 6-7 caracteres enviar email, guardar en la bd. Comprobar código en SmallDream y si existe, son las gerentes las que escogen el premio
Posible sistema de puntos para los perfiles(No ahora, tener en cuenta)
Diseño interfaz, prototipos, referencias de otras apps, ver interfaz1.png
Prueba de la(s) usuaria(s)